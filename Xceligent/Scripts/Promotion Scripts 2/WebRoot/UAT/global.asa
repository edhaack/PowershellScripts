
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupOptions"></OBJECT>
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupMeanings"></OBJECT>
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupCodeValueIDs"></OBJECT>
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupCodeSets"></OBJECT>

<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupFileTypes"></OBJECT>
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupMaliciousFiles"></OBJECT>

<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupMetroInfo"></OBJECT>

<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupCities"></OBJECT>
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupCounties"></OBJECT>
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupListingCos"></OBJECT>
<OBJECT RUNAT=SERVER SCOPE=APPLICATION PROGID="Passport.LookupTable" ID="oLookupStatesByMetro"></OBJECT>

<!--#Include file="global_config.asp"-->

<SCRIPT LANGUAGE='VBScript' RUNAT='Server'>

'You can add special event handlers in this file that will get run automatically when
'special Active Server Pages events occur. To create these handlers, just create a
'subroutine with a name from the list below that corresponds to the event you want to
'use. For example, to create an event handler for Session_OnStart, you would put the
'following code into this file (without the comments):

'Sub Session_OnStart
'**Put your code here **
'End Sub

'EventName              Description
'Session_OnStart        Runs the first time a user runs any page in your application
'Session_OnEnd          Runs when a user's session times out or quits your application
'Application_OnStart    Runs once when the first page of your application is run for the first time by any user
'Application_OnEnd      Runs once when the web server shuts down
 
Sub Application_OnStart
Dim sConnStr,sConnStrReport
Dim fso,file,sfile

	InitConfig
	
	'Build Database Connection Strings
	sConnStr=BuildConnectionString(ServerName,InitCatalog,UserName,Password)
	sConnStrReport=BuildConnectionString(ServerName_Report,InitCatalog_Report,UserName_Report,Password_Report)
	sConnStrInternal=BuildConnectionString(ServerName,InitCatalog,UserName_Internal,Password_Internal)
	sConnStrReportInternal=BuildConnectionString(ServerName_Report,InitCatalog_Report,UserName_Internal,Password_Internal)
	'Store info in Application Object
	Application("ConnectionString")=sConnStr
	Application("ConnectionString_Report")=sConnStrReport		
	Application("ConnectionString_Internal")=sConnStrInternal
	Application("ConnectionString_InternalReport")=sConnStrReportInternal
	
	Application("LoginDomain")=LoginDomain
	Application("SiteImage")=SiteImage
	Application("InitCatalog")=InitCatalog
	Application("InitCatalog_Report")=InitCatalog_Report
	Application("ServerName")=ServerName
	Application("ServerName_Report")=ServerName_Report
	Application("UserName")=UserName
	Application("Password")=Password
	Application("UserName_Report")=UserName_Report
	Application("Password_Report")=Password_Report
	Application("InHouse")=blnInHouse
	Application("CacheTemplates")=blnCacheTemplates
	Application("UseCaching")=blnUseCaching
	Application("DisabledColor")=DisabledColor
	Application("AppVersion") = AppVersion 'tbolton
	Application("jScriptVer") = JScriptVersion 'tbolton 12/30/02, use the same value for now, but this gives us flexibility in the future
	Application("WebServerName")=WebServerName
	Application("WebServerNameDorey")=WebServerNameDorey
	Application("DataFilePath")=sDataFilePath
	Application("ChangeLogPath")=sChangeLogPath
	Application("IPList")=sIPList
	Application("XMailText")=XMailText
	Application("XMailColorText")=XMailColorText
	Application("CS_Link")=CS_Link
	
    'get legal notification last modified date
	sfile = server.MapPath("/xceligentapp") & "\legalnotificationtext.htm"
	Set fso = Server.CreateObject("Scripting.FileSystemObject")
	if fso.FileExists(sfile) then
		Set file = fso.GetFile(sfile)
		Application("LegalNotificationModifiedDate") = file.DateLastModified
	end if
	
	Application("MapRoot")=Server.MapPath("/")
	
	oLookupOptions.LoadValues sDataFilePath & "cvOptions.txt",0
	oLookupMeanings.LoadValues sDataFilePath & "cvMeanings.txt",0
	oLookupCodeValueIDs.LoadValues sDataFilePath & "cvCodeValueID.txt",0
	oLookupCodeSets.LoadValues sDataFilePath & "csInfo.txt",0
	
	oLookupFileTypes.LoadValues sDataFilePath & "fileTypes.txt",0
	oLookupMaliciousFiles.LoadValues sDataFilePath & "maliciousFiles.txt",0
	oLookupMetroInfo.LoadValues sDataFilePath & "metroInfo.txt", 0	
	oLookupCities.LoadValues sDataFilePath & "cityOptions.txt", 0
	oLookupCounties.LoadValues sDataFilePath & "countyOptions.txt", 0
	oLookupListingCos.LoadValues sDataFilePath & "listingCompanyOptions.txt",0
	oLookupStatesByMetro.LoadValues sDataFilePath & "stateList.txt",0
end sub

function BuildConnectionString(strServerName,initialCatalog,UserName,Password)
   dim strConnStr
     
   strConnStr="Provider=SQLOLEDB.1;Persist Security Info=False;User ID=" & UserName & ";PWD=" & Password & ";Initial Catalog=" & initialCatalog & ";Data Source=" & strServerName

   BuildConnectionString = strConnStr
    
end function

</SCRIPT>
